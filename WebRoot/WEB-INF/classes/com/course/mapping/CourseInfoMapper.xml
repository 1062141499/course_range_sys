<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.dao.CourseInfoMapper">
  <resultMap id="BaseResultMap" type="com.course.model.CourseInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="course_name" property="courseName" jdbcType="VARCHAR" />
  <result column="major_id" property="majorId" jdbcType="INTEGER" />
  <result column="direct_id" property="directId" jdbcType="INTEGER" />
  <result column="term_id" property="termId" jdbcType="INTEGER" />
  <result column="room_ids" property="roomIds" jdbcType="VARCHAR" />
  <result column="course_times" property="courseTimes" jdbcType="INTEGER" />
  <result column="is_bx" property="isBx" jdbcType="INTEGER" />
  <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,course_name,major_id,direct_id,term_id,room_ids,course_times,is_bx,teacher_id
  </sql>
  <select id="selectByExample" parameterType="com.course.model.CourseInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from course_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from course_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.course.model.CourseInfoExample">
    delete from course_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.course.model.CourseInfo">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into course_info (course_name,major_id,direct_id,term_id,room_ids,course_times,is_bx,teacher_id)
      values (	#{id,jdbcType=INTEGER},	#{courseName,jdbcType=VARCHAR},	#{majorId,jdbcType=INTEGER},	#{directId,jdbcType=INTEGER},	#{termId,jdbcType=INTEGER},	#{roomIds,jdbcType=VARCHAR},	#{courseTimes,jdbcType=INTEGER},	#{isBx,jdbcType=INTEGER},	#{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.course.model.CourseInfo">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into course_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="courseName != null" >
	  course_name,
 </if>
<if test="majorId != null" >
	  major_id,
 </if>
<if test="directId != null" >
	  direct_id,
 </if>
<if test="termId != null" >
	  term_id,
 </if>
<if test="roomIds != null" >
	  room_ids,
 </if>
<if test="courseTimes != null" >
	  course_times,
 </if>
<if test="isBx != null" >
	  is_bx,
 </if>
<if test="teacherId != null" >
	  teacher_id
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="courseName != null" >
	 #{courseName,jdbcType=VARCHAR},
	 </if>
  <if test="majorId != null" >
	 #{majorId,jdbcType=INTEGER},
	 </if>
  <if test="directId != null" >
	 #{directId,jdbcType=INTEGER},
	 </if>
  <if test="termId != null" >
	 #{termId,jdbcType=INTEGER},
	 </if>
  <if test="roomIds != null" >
	 #{roomIds,jdbcType=VARCHAR},
	 </if>
  <if test="courseTimes != null" >
	 #{courseTimes,jdbcType=INTEGER},
	 </if>
  <if test="isBx != null" >
	 #{isBx,jdbcType=INTEGER},
	 </if>
  <if test="teacherId != null" >
	 #{teacherId,jdbcType=INTEGER},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.course.model.CourseInfoExample" resultType="java.lang.Long">
    select count(*) from course_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_info
    <set>
       <if test="record.courseName != null" >
	 course_name = #{record.courseName,jdbcType=VARCHAR},
</if>
 <if test="record.majorId != null" >
	 major_id = #{record.majorId,jdbcType=INTEGER},
</if>
 <if test="record.directId != null" >
	 direct_id = #{record.directId,jdbcType=INTEGER},
</if>
 <if test="record.termId != null" >
	 term_id = #{record.termId,jdbcType=INTEGER},
</if>
 <if test="record.roomIds != null" >
	 room_ids = #{record.roomIds,jdbcType=VARCHAR},
</if>
 <if test="record.courseTimes != null" >
	 course_times = #{record.courseTimes,jdbcType=INTEGER},
</if>
 <if test="record.isBx != null" >
	 is_bx = #{record.isBx,jdbcType=INTEGER},
</if>
 <if test="record.teacherId != null" >
	 teacher_id = #{record.teacherId,jdbcType=INTEGER}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_info
    set 
    				course_name = #{record.courseName,jdbcType=VARCHAR},	major_id = #{record.majorId,jdbcType=INTEGER},	direct_id = #{record.directId,jdbcType=INTEGER},	term_id = #{record.termId,jdbcType=INTEGER},	room_ids = #{record.roomIds,jdbcType=VARCHAR},	course_times = #{record.courseTimes,jdbcType=INTEGER},	is_bx = #{record.isBx,jdbcType=INTEGER},	teacher_id = #{record.teacherId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.model.CourseInfo">
    update course_info
    <set>
       <if test="courseName != null" >
	 course_name = #{courseName,jdbcType=VARCHAR},
</if>
 <if test="majorId != null" >
	 major_id = #{majorId,jdbcType=INTEGER},
</if>
 <if test="directId != null" >
	 direct_id = #{directId,jdbcType=INTEGER},
</if>
 <if test="termId != null" >
	 term_id = #{termId,jdbcType=INTEGER},
</if>
 <if test="roomIds != null" >
	 room_ids = #{roomIds,jdbcType=VARCHAR},
</if>
 <if test="courseTimes != null" >
	 course_times = #{courseTimes,jdbcType=INTEGER},
</if>
 <if test="isBx != null" >
	 is_bx = #{isBx,jdbcType=INTEGER},
</if>
 <if test="teacherId != null" >
	 teacher_id = #{teacherId,jdbcType=INTEGER}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.model.CourseInfo">
    update course_info
    set 
     			course_name = #{courseName,jdbcType=VARCHAR},	major_id = #{majorId,jdbcType=INTEGER},	direct_id = #{directId,jdbcType=INTEGER},	term_id = #{termId,jdbcType=INTEGER},	room_ids = #{roomIds,jdbcType=VARCHAR},	course_times = #{courseTimes,jdbcType=INTEGER},	is_bx = #{isBx,jdbcType=INTEGER},	teacher_id = #{teacherId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
